{"version":3,"sources":["utils/Context.js","images/icons/modal-close.svg","components/Modal/Modal.js","images/icons/heart.svg","common/Favorites/Favorites.js","common/Search/Search.js","api/api.js","redux/SearchReducer.js","redux/FairytalesListReducer.js","redux/sortingReducers.js","common/Search/SearchContainer.js","components/Header/images/home.svg","components/Header/Header.js","images/controls/headphone.svg","components/FairytalesList/FairytalesItem/FairytalesItem.js","components/FairytalesList/FairytalesList.js","components/FairytalesList/FairytalesListContainer.js","components/Sorting/Sorting.js","components/Sorting/SortingContainer.js","common/Favorites/FavoritesList/FavoritesList.js","images/grass-bg.svg","common/CurrentBookToBuy/CurrentBookToBuy.js","images/icons/spiner.svg","common/Preloader/Preloader.js","pages/StartPage/Start.js","images/icons/book-arrow.svg","images/controls/controlsPause.svg","images/controls/controlsPlay.svg","images/controls/controlsVolume.svg","images/controls/controlsRewindNext.svg","images/controls/controlsRewindBack.svg","pages/FlipPageCustom/FlipNav/Controls/Controls.js","pages/FlipPageCustom/FlipNav/FlipNav.js","pages/FlipPageCustom/FlipPageCustom.js","images/controls/audiobook.svg","pages/FlipPageCustom/FlipPageCustomContainer.js","redux/LoginReducer.js","images/leaves.svg","pages/LoginPage/LoginPage.js","components/AppRouter/AppRouter.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js","components/Sorting/Sorting.module.css","common/Menu/Menu.module.css","common/Search/Search.module.css","pages/StartPage/Start.module.css","pages/LoginPage/LoginPage.module.css"],"names":["Context","React","createContext","Modal","children","maxWidth","dataName","useContext","setModalOpened","setBuyBookModalOpened","className","style","data-name","onClick","event","currentTarget","dataset","name","handleClose","src","close","alt","connect","state","favoritesList","fairytalesList","props","useState","favoritesBooksCount","setFavoritesBooksCount","modalOpened","useEffect","length","heart","Search","bookTitle","inFocus","getBooksFromSearch","selectedAuthorName","selectedGenreId","hideSearch","styles","box","search","type","onChange","e","setBookTitle","target","value","setSearchResults","onFocus","searchInFocus","onBlur","placeholder","searchBtn","searchResult","booksListFromSearch","authData","JSON","parse","localStorage","getItem","accessToken","instance","axios","create","baseURL","headers","Authorization","auth","post","then","response","data","setItem","stringify","defaults","booksAPI","get","bookId","searchAPI","title","authorName","genre","SET_BOOK_TITLE","SET_BOOK_FROM_SEARCH","CLEAR_BOOKS_LIST_FROM_SEARCH","SET_SORTING_RESULTS","SET_FOCUS_ON_SEARCH","initialState","sortingResults","SearchReducer","action","bookList","focus","SET_BOOKS","SET_ALL_BOOK_PAGES","SET_BOOKS_FROM_SEARCH","SET_PAGENUMBER_FOR_OPENED_BOOKS","SET_CURRENT_TIME_FOR_LISTENED_BOOK","SET_TOUCHED_BOOK","SHOW_ONLY_FREE_BOOKS","SET_STATE_OF_AUDIO_FOR_CURRENTBOOK","SET_TOTALPAGES_FOR_CURRENTBOOK","SET_FAVORITES_BOOK","SET_ID_OF_CURRENTBOOK_FOR_BUY","SET_FETCHING_TOGGLE","books","bookPagesAll","idOfCurrentBookForBuy","showFreeBooks","isFetchingToggle","touchedBooks","setBooks","setBookPagesAll","setFetchingToggle","fetching","setFavoritesBooks","dispatch","getState","setIdOfCurrentBookForBuy","FairytalesListReducer","booksFromSearch","map","item","id","bookid","pageNumber","currentTime","time","progress","bookInfo","isReading","isPause","totalPages","isListen","free","idx","findIndex","newFavoritesList","splice","OPEN_SORT_BY_AUTHORNAME","GET_AUTHORNAMES","CHANGE_AUTHOR_NAME","SET_BOOK_FROM_SORTING","SET_SEARCH_RESULTS","SORT_BY_TEXT_AND_AUDIO","SET_GENRE_LIST","SELECTED_GENRE","SELECTED_AUTHORNAME","authorNamesIsToggle","authorNames","author","booksListFromSorting","resultsFromSearch","sortByTextAndAudio","genreList","selectedGenre","genreTitle","genreId","getBooksFromSorting","sortingReducers","isToggle","names","bookType","searching","sorting","clearBooksListFromSearch","Header","startPage","to","location","pathname","home","SearchContainer","FairytalesItem","price","handleOpenModalForBuyBook","handleSetFavorites","currentfavoriteBook","data-id","width","height","viewBox","xmlns","d","undefined","currentBookId","setTouchedBooks","image","bookSound","regions","headPhone","hasProgress","readOnly","min","max","FairytalesList","publishedBook","filter","published","favoritesBooks","buyBookModalOpened","stopPropagation","String","closest","classList","toggle","fairytalesItem","TransitionGroup","component","el","join","find","itm","CSSTransition","timeout","classNames","marginTop","color","withRouterFeirytalesListContainer","withRouter","setBooksFromSearch","getGenres","isAuth","login","getBooksList","Sorting","sortRef1","useRef","sortRef2","sortRef3","inputRef","genreListToggle","setGenreListToggle","handleClick","textContent","setSelectedAuthorName","changeSortingByTextAndAudio","sortingByTextAndAudio","innerHTML","handeleGenreClick","setSelectedGenre","index","current","contains","isOpenSortingAc","document","addEventListener","removeEventListener","setSortingToggle","classes","list","ref","inner","sortingToggle","freeBookSort","showOnlyFreeBooks","checked","htmlFor","setAuthorNames","changeSelectedAuthorName","setBooksListFromSorting","setSortingResults","emptyAuthor","unshift","uniqueSet","Set","x","handleRemove","currentBook","transform","position","left","top","Preloader","spinner","Start","isFetching","useSelector","Provider","container","FairytalesListContainer","bgGrass","Controls","volumeOff","setVolumeOff","isPlaying","setIsPlaying","volumeValue","setvolumeValue","duration","setDuration","setCurrentTime","audioRef","audio","currentTimeRef","currentBookSoundRegions","pageNum","Math","ceil","end","setPageNumbersForOpenedBooks","nextPage","currentRegionsOfNextPage","start","onFlipToNext","pause","regionCreatedHandler","useCallback","setCurrentTimeForListenedBook","paused","bookState","play","secondsToHms","seconds","hours","parseInt","sec","file","onLoadedMetadata","toFixed","onTimeUpdate","setStateOfAudio","Pause","Play","volume","step","onFlipToPrev","rewindBackIcon","rewindNextIcon","FlipNav","currentPageNum","prevPage","currentRegionsOfPrevPage","flipRef","pageFlip","flipPrev","arrow","flipNext","FlipPageCustom","memo","currentRegionsStart","match","params","setCurrentPageNum","setTotalPages","setProgress","setBookState","readingProgress","floor","Infinity","bookPagesSort","querySelector","add","remove","flipPages","bookPageClassName","blocks","block","dangerouslySetInnerHTML","__html","text","url","onInit","getPageCount","setTotalPagesForCurrentBook","turnToPage","minWidth","maxHeight","minHeight","onChangeState","size","onFlip","object","flipController","isUserMove","onPageTurn","mobileScrollSupport","showCover","renderOnlyPageLengthChange","withRouterFlipPageCustomContainer","sort","a","b","isCover","getBookPagesAll","bookPages","IS_AUTH","loginPage","LoginReducer","LoginPage","bg","content","header","back","main","form","formInner","label","inputReadOnly","input","buttons","register","deleteBooks","getAuth","setUserAuth","exact","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","basename","process","getElementById","module","exports"],"mappings":"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","file":"static/js/main.185c9637.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport  const Context = React.createContext();","export default __webpack_public_path__ + \"static/media/modal-close.e87e75ac.svg\";","import React, {useContext} from 'react';\r\n\r\n//styles\r\nimport './styles-modal.css'\r\n\r\n//images\r\nimport close from '../../images/icons/modal-close.svg';\r\nimport {Context} from \"../../utils/Context\";\r\n\r\nconst Modal = ({children,maxWidth,dataName}) => {\r\n\r\n  const {setModalOpened,setBuyBookModalOpened} = useContext(Context)\r\n\r\n  const handleClose = (event) => {\r\n\r\n    if(event.currentTarget.dataset.name === 'buyBook') {\r\n\r\n      setBuyBookModalOpened(false)\r\n    }\r\n    if(event.currentTarget.dataset.name === 'favotiresBooks') {\r\n      setModalOpened(false)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={\"modal\"}>\r\n      <div className=\"modal__container\" style={{maxWidth:`${maxWidth}px`}}>\r\n        {children}\r\n        <span data-name={dataName} onClick={(event) => handleClose(event)} className={\"modal__close\"}>\r\n          <img src={close} alt=\"close modal\"/>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;","export default __webpack_public_path__ + \"static/media/heart.6970f347.svg\";","//global dependencies\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Context} from \"../../utils/Context\";\r\n\r\n// images\r\nimport heart from '../../images/icons/heart.svg';\r\n\r\n//styles\r\nimport './styles-favorites.css';\r\n\r\n\r\nconst Favorites = (props) => {\r\n\r\n  const [favoritesBooksCount, setFavoritesBooksCount] = useState([])\r\n\r\n  const {modalOpened,setModalOpened} = useContext(Context)\r\n\r\n  const handleModal = () => {\r\n    setModalOpened(!modalOpened);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFavoritesBooksCount(props.favoritesList.length)\r\n  }, [props.favoritesList.length])\r\n\r\n  return (\r\n    <>\r\n      <div onClick={() => handleModal()} className={\"favorites\"}>\r\n        <img src={heart} alt=\"decor\"/>\r\n        {\r\n          favoritesBooksCount > 0 && (\r\n            <span>{favoritesBooksCount}</span>\r\n          )\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    favoritesList: state.fairytalesList.favoritesList\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Favorites);","import React, {useEffect} from 'react';\r\nimport styles from './Search.module.css';\r\n\r\nconst Search = (props) => {\r\n\r\n  const handleChange = (e) => {\r\n    props.setBookTitle(e.target.value)\r\n    props.setSearchResults(e.target.value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.bookTitle.length >= 3 || (props.bookTitle.length === 0 && props.inFocus)) {\r\n      props.getBooksFromSearch( props.bookTitle, props.selectedAuthorName !== 'Av forfatter' ? props.selectedAuthorName : '', props.selectedGenreId )\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props.bookTitle])\r\n\r\n  return (\r\n    <>\r\n      {!props.hideSearch && (\r\n        <div className={styles.box}>\r\n          <input className={styles.search} type=\"search\" onChange={handleChange} onFocus={() => {props.searchInFocus(true)}} onBlur={() => {props.searchInFocus(false)}} value={props.bookTitle} placeholder=\"Søk\"/>\r\n          <button  type=\"submit\" className={styles.searchBtn}/>\r\n          {props.bookTitle.length >= 3 && (\r\n            <span className={styles.searchResult}>Найдено: {props.booksListFromSearch.length}</span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search;","import axios from \"axios\";\r\n\r\nconst authData = JSON.parse(localStorage.getItem('fairytales_auth'));\r\nconst accessToken = authData ? authData : null;\r\n\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://0gdmx7obk4.execute-api.eu-west-1.amazonaws.com/dev/',\r\n  headers: {\r\n    Authorization: `${accessToken}`\r\n  }\r\n});\r\n\r\nexport const auth = {\r\n  checkAuth() {\r\n    return instance.post(`user/login`, {\r\n      \"name\": \"test\",\r\n      \"password\": \"00000\"\r\n    }).then((response) => {\r\n      if(response && response.data) {\r\n        localStorage.setItem('fairytales_auth', JSON.stringify(response.data.data));\r\n        instance.defaults.headers = {Authorization: `${response.data.data}`};\r\n      }\r\n      return response\r\n    })\r\n  }\r\n}\r\n\r\nexport const booksAPI = {\r\n  getBooks() {\r\n    return instance.get(`book/get/list`);\r\n  },\r\n  getAllBookPages(bookId) {\r\n    return instance.get(`book/${bookId}/page/all`);\r\n  },\r\n  getGenreList() {\r\n    return instance.get('genre/list')\r\n  }\r\n}\r\n\r\nexport const searchAPI = {\r\n  getBooks(title,authorName,genre) {\r\n    return instance.get(`book/get/list?author=${authorName ? authorName : ''}&title=${title ? title : ''}&genre=${genre ? genre : ''}`)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // JSON\r\n// let fairytalesList = [\r\n//   {\r\n//     id: 1,\r\n//     title:\"The Snow Queen\",\r\n//     author:\"Hans Christian Andersen\",\r\n//     image:\"https://s3.eu-west-1.amazonaws.com/fairytalesbucket/img/1618645584328.jpeg\",\r\n//     owner:null,\r\n//     price:'12.06',\r\n//     isNew:true,\r\n//     published:true,\r\n//     createdAt:'2021-04-09T07:34:39.282Z',\r\n//     updatedAt:'2021-05-12T10:45:37.873Z',\r\n//     bookSound:{\r\n//       id:1,\r\n//       book_id:1,\r\n//       file:'https://fairytalesbucket.s3-eu-west-1.amazonaws.com/sound/book_1.mp3',\r\n//       regions: [\r\n//         {\r\n//           id: \"be98be14-76d7-4f57-b55d-002db487a7af\",\r\n//           start: 1.4210854715202004e-14,\r\n//           end: 71.78936708860758,\r\n//           data: {\r\n//             pageNumber: 1\r\n//           }\r\n//         },\r\n//         {\r\n//           id:\"be98be14-76d7-4f57-b55d-002db487a7af\",\r\n//           start: 71.78936708860759,\r\n//           end: 144.22548523206711,\r\n//           data: {\r\n//             pageNumber: 3\r\n//           }\r\n//         },\r\n//         {\r\n//           id:\"be98be14-76d7-4f57-b55d-002db487a7af\",\r\n//           start: 144.22548523206711,\r\n//           end: 217.48715119482887,\r\n//           data: {\r\n//             pageNumber: 5\r\n//           }\r\n//         },\r\n//       ],\r\n//       createdAt:\"2021-04-12T08:47:38.138Z\",\r\n//       updatedAt:\"2021-04-12T08:47:38.138Z\",\r\n//     },\r\n//     bookGenre:[\r\n//       {\r\n//         id: 12,\r\n//         book: 14,\r\n//         genre_id: 1,\r\n//         genres:{\r\n//           id:1,\r\n//           title: 'Advantages'\r\n//         }\r\n//       },\r\n//       {\r\n//         id: 13,\r\n//         book: 14,\r\n//         genre_id: 2,\r\n//         genres:{\r\n//           id:1,\r\n//           title: 'Learning'\r\n//         }\r\n//       },\r\n//\r\n//     ]\r\n//\r\n//   }\r\n// ]\r\n","import {searchAPI} from \"../api/api\";\r\n\r\nconst SET_BOOK_TITLE = 'SET_BOOK_TITLE';\r\nconst SET_BOOK_FROM_SEARCH = 'SET_BOOK_FROM_SEARCH';\r\nconst CLEAR_BOOKS_LIST_FROM_SEARCH = 'CLEAR_BOOKS_LIST_FROM_SEARCH';\r\nconst SET_SORTING_RESULTS = 'SET_SORTING_RESULTS';\r\nconst SET_FOCUS_ON_SEARCH = 'SET_FOCUS_ON_SEARCH';\r\n\r\nlet initialState = {\r\n  bookTitle: '',\r\n  booksListFromSearch: [],\r\n  sortingResults: '',\r\n  inFocus: false\r\n}\r\n\r\nconst SearchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_BOOK_TITLE:\r\n      return {\r\n        ...state,\r\n        bookTitle: action.title,\r\n      }\r\n    case SET_BOOK_FROM_SEARCH:\r\n      return {\r\n        ...state,\r\n        booksListFromSearch: action.bookList,\r\n      }\r\n    case CLEAR_BOOKS_LIST_FROM_SEARCH:\r\n      return {\r\n        ...state,\r\n        booksListFromSearch: [],\r\n      }\r\n    case SET_SORTING_RESULTS:\r\n\r\n      return {\r\n        ...state,\r\n        sortingResults: action.sortingResults,\r\n      }\r\n      case SET_FOCUS_ON_SEARCH:\r\n      return {\r\n        ...state,\r\n        inFocus: action.focus,\r\n      }\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setBookTitle = (title) => ({type:SET_BOOK_TITLE, title});\r\nexport const setBooksListFromSearch = (bookList) => ({type:SET_BOOK_FROM_SEARCH, bookList});\r\nexport const clearBooksListFromSearch = () => ({type:CLEAR_BOOKS_LIST_FROM_SEARCH});\r\nexport const setSortingResults = (sortingResults) => ({type: SET_SORTING_RESULTS, sortingResults})\r\nexport const searchInFocus = (focus) => ({type: SET_FOCUS_ON_SEARCH, focus})\r\n\r\nexport const getBooksFromSearch = (bookTitle,sortingResults,genre) => {\r\n  return (dispatch) => {\r\n    searchAPI.getBooks(bookTitle,sortingResults,genre).then(response => {\r\n      return dispatch(setBooksListFromSearch(response.data.data))\r\n    })\r\n  }\r\n}\r\n\r\nexport default SearchReducer;","import {booksAPI} from \"../api/api\";\r\n\r\nconst SET_BOOKS = 'SET_BOOKS';\r\nconst SET_ALL_BOOK_PAGES = 'SET_ALL_BOOK_PAGES';\r\n\r\nconst SET_BOOKS_FROM_SEARCH = 'SET_BOOKS_FROM_SEARCH';\r\nconst SET_PAGENUMBER_FOR_OPENED_BOOKS = 'SET_PAGENUMBER_FOR_OPENED_BOOKS';\r\nconst SET_CURRENT_TIME_FOR_LISTENED_BOOK = 'SET_CURRENT_TIME_FOR_LISTENED_BOOK';\r\nconst SET_TOUCHED_BOOK = 'SET_THOUCHED_BOOK';\r\nconst SHOW_ONLY_FREE_BOOKS = 'SHOW_ONLY_FREE_BOOKS';\r\nconst SET_STATE_OF_AUDIO_FOR_CURRENTBOOK = 'SET_STATE_OF_AUDIO_FOR_CURRENTBOOK';\r\nconst SET_TOTALPAGES_FOR_CURRENTBOOK = 'SET_TOTALPAGES_FOR_CURRENTBOOK';\r\nconst SET_FAVORITES_BOOK = 'SET_FAVORITES_BOOK';\r\nconst SET_ID_OF_CURRENTBOOK_FOR_BUY = 'SET_ID_OF_CURRENTBOOK_FOR_BUY';\r\nconst SET_FETCHING_TOGGLE = 'SET_FETCHING_TOGGLE';\r\n\r\nlet initialState = {\r\n  books: [],\r\n  bookPagesAll: [],\r\n  hideSearch: true,\r\n  idOfCurrentBookForBuy: null,\r\n  showFreeBooks: false,\r\n  isFetchingToggle: false,\r\n  favoritesList: localStorage.getItem('favoritesBooks') ? JSON.parse(localStorage.getItem('favoritesBooks')) : [],\r\n  touchedBooks: localStorage.getItem('viewedBooksNew') ? JSON.parse(localStorage.getItem('viewedBooksNew')) : [],\r\n}\r\n\r\nconst FairytalesListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_BOOKS:\r\n      return {\r\n        ...state,\r\n        books: [...action.books]\r\n      }\r\n    case SET_ALL_BOOK_PAGES:\r\n      return {\r\n        ...state,\r\n        bookPagesAll: [...action.bookPagesAll]\r\n      }\r\n    case SET_BOOKS_FROM_SEARCH:\r\n      return {\r\n        ...state,\r\n        books: [...action.booksFromSearch]\r\n      }\r\n    case SET_PAGENUMBER_FOR_OPENED_BOOKS:\r\n      return {\r\n        ...state,\r\n        touchedBooks: [...state.touchedBooks].map(item => {\r\n          if (item.id === action.bookid) {\r\n            return {\r\n              ...item,\r\n              pageNumber: action.pageNumber,\r\n              currentTime: action.time,\r\n              progress: action.progress,\r\n            }\r\n          }\r\n          return item\r\n        })\r\n      }\r\n    case SET_CURRENT_TIME_FOR_LISTENED_BOOK:\r\n      return {\r\n        ...state,\r\n        touchedBooks: [...state.touchedBooks].map(item => {\r\n          if (item.id === action.bookId) {\r\n            return {\r\n              ...item,\r\n              currentTime: action.currentTime,\r\n            }\r\n          }\r\n          return item\r\n        })\r\n      }\r\n    case SET_TOUCHED_BOOK:\r\n      return {\r\n        ...state,\r\n        touchedBooks: [...state.touchedBooks, {...action.bookInfo, isReading: null, isPause:true, totalPages:null, isListen: null}]\r\n      }\r\n    case SET_STATE_OF_AUDIO_FOR_CURRENTBOOK:\r\n      return {\r\n        ...state,\r\n        touchedBooks: [...state.touchedBooks].map(item => {\r\n          if (item.id === action.bookId) {\r\n            return {\r\n              ...item,\r\n              isPause: action.isPause,\r\n            }\r\n          }\r\n          return item\r\n        })\r\n      }\r\n      case SET_TOTALPAGES_FOR_CURRENTBOOK:\r\n      return {\r\n        ...state,\r\n        touchedBooks: [...state.touchedBooks].map(item => {\r\n          if (item.id === action.bookId) {\r\n            return {\r\n              ...item,\r\n              totalPages: action.totalPages,\r\n            }\r\n          }\r\n          return item\r\n        })\r\n      }\r\n    case SHOW_ONLY_FREE_BOOKS:\r\n      return {\r\n        ...state,\r\n        showFreeBooks: action.free,\r\n      }\r\n    case SET_FAVORITES_BOOK:\r\n      const idx = state.favoritesList.findIndex(item => item === action.bookId);\r\n      let newFavoritesList = [];\r\n      if (idx === -1) {\r\n        newFavoritesList = [...state.favoritesList, action.bookId];\r\n      } else {\r\n        newFavoritesList = [...state.favoritesList];\r\n        newFavoritesList.splice(idx, 1);\r\n      }\r\n      return {\r\n        ...state,\r\n        favoritesList: newFavoritesList\r\n      }\r\n    case SET_ID_OF_CURRENTBOOK_FOR_BUY:\r\n      return {\r\n        ...state,\r\n        idOfCurrentBookForBuy: action.bookId\r\n      }\r\n    case SET_FETCHING_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isFetchingToggle: action.fetching\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const showOnlyFreeBooks = (free) => ({type: SHOW_ONLY_FREE_BOOKS, free});\r\nexport const setBooks = (books) => ({type: SET_BOOKS, books});\r\n\r\nexport const setBookPagesAll = (bookPagesAll) => ({type: SET_ALL_BOOK_PAGES, bookPagesAll});\r\nexport const setFetchingToggle = (fetching) => ({type: SET_FETCHING_TOGGLE, fetching})\r\n\r\nexport const setTouchedBooks = (bookInfo) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: SET_TOUCHED_BOOK, bookInfo})\r\n    const state = getState();\r\n    localStorage.setItem('viewedBooksNew', JSON.stringify(state.fairytalesList.touchedBooks))\r\n  }\r\n}\r\n\r\nexport const setStateOfAudio = (bookId,isPause) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: SET_STATE_OF_AUDIO_FOR_CURRENTBOOK, bookId, isPause})\r\n    const state = getState();\r\n    localStorage.setItem('viewedBooksNew', JSON.stringify(state.fairytalesList.touchedBooks))\r\n  }\r\n}\r\n\r\nexport const setTotalPagesForCurrentBook = (bookId,totalPages) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: SET_TOTALPAGES_FOR_CURRENTBOOK, bookId, totalPages})\r\n    const state = getState();\r\n    localStorage.setItem('viewedBooksNew', JSON.stringify(state.fairytalesList.touchedBooks))\r\n  }\r\n}\r\n\r\nexport const setBooksFromSearch = (booksFromSearch) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: SET_BOOKS_FROM_SEARCH, booksFromSearch})\r\n    const state = getState();\r\n    localStorage.setItem('viewedBooksNew', JSON.stringify(state.fairytalesList.touchedBooks))\r\n  }\r\n}\r\n\r\nexport const setPageNumbersForOpenedBooks = (bookid, pageNumber, time, progress) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: SET_PAGENUMBER_FOR_OPENED_BOOKS, bookid, pageNumber, time, progress})\r\n    const state = getState();\r\n    localStorage.setItem('viewedBooksNew', JSON.stringify(state.fairytalesList.touchedBooks))\r\n  }\r\n}\r\n\r\nexport const setCurrentTimeForListenedBook = (bookId, currentTime) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: SET_CURRENT_TIME_FOR_LISTENED_BOOK, bookId, currentTime})\r\n    const state = getState();\r\n    localStorage.setItem('viewedBooksNew', JSON.stringify(state.fairytalesList.touchedBooks))\r\n  }\r\n}\r\n\r\nexport const setFavoritesBooks = (bookId) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: SET_FAVORITES_BOOK, bookId})\r\n    const state = getState();\r\n    localStorage.setItem('favoritesBooks', JSON.stringify(state.fairytalesList.favoritesList))\r\n  }\r\n}\r\n\r\nexport const getBooksList = () => {\r\n  return (dispatch) => {\r\n    dispatch(setFetchingToggle(true))\r\n    booksAPI.getBooks().then(response => {\r\n       if(response.data.data) {\r\n         dispatch(setFetchingToggle(false))\r\n       }\r\n      dispatch(setBooks(response.data.data))\r\n    })\r\n  }\r\n}\r\n\r\nexport const getBookPagesAll = (bookId) => {\r\n  return (dispatch) => {\r\n    dispatch(setFetchingToggle(true))\r\n    booksAPI.getAllBookPages(bookId).then(response => {\r\n      if(response.data.data) {\r\n        dispatch(setFetchingToggle(false))\r\n      }\r\n      dispatch(setBookPagesAll(response.data.data));\r\n    })\r\n  }\r\n}\r\n\r\nexport const setIdOfCurrentBookForBuy = (bookId) => ({type: SET_ID_OF_CURRENTBOOK_FOR_BUY, bookId});\r\n\r\n\r\nexport default FairytalesListReducer;\r\n","import {booksAPI, searchAPI} from \"../api/api\";\r\nimport {setBooks, setFetchingToggle} from \"./FairytalesListReducer\";\r\n\r\nconst OPEN_SORT_BY_AUTHORNAME = 'OPEN_SORT_BY_AUTHORNAME';\r\nconst GET_AUTHORNAMES = 'GET_AUTHORNAMES';\r\nconst CHANGE_AUTHOR_NAME = 'CHANGE_AUTHOR_NAME';\r\nconst SET_BOOK_FROM_SORTING = 'SET_BOOK_FROM_SORTING';\r\nconst SET_SEARCH_RESULTS = 'SET_SEARCH_RESULTS';\r\nconst SORT_BY_TEXT_AND_AUDIO = 'SORT_BY_TEXT_AND_AUDIO';\r\nconst SET_GENRE_LIST = 'SET_GENRE_LIST';\r\nconst SELECTED_GENRE = 'SELECTED_GENRE';\r\nconst SELECTED_AUTHORNAME = 'SELECTED_AUTHORNAME';\r\n\r\nlet initialState = {\r\n  authorNamesIsToggle: false,\r\n  authorNames: [{author: \"Av forfatter\"}],\r\n  booksListFromSorting: [],\r\n  resultsFromSearch: '',\r\n  sortByTextAndAudio: 'Show all',\r\n  genreList: [],\r\n  selectedGenre: {genreTitle:'',genreId:''},\r\n  selectedAuthorName: '',\r\n}\r\n\r\nconst sortingReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case  OPEN_SORT_BY_AUTHORNAME:\r\n      return {\r\n        ...state,\r\n        authorNamesIsToggle: action.isToggle\r\n      };\r\n    case GET_AUTHORNAMES:\r\n      return {\r\n        ...state,\r\n        authorNames: [{author: \"Av forfatter\"}, action.authorNames]\r\n      }\r\n    case CHANGE_AUTHOR_NAME:\r\n      return {\r\n        ...state,\r\n        authorNames: [{author: action.name}, action.names]\r\n      }\r\n    case SET_BOOK_FROM_SORTING:\r\n      return {\r\n        ...state,\r\n        booksListFromSorting: action.bookList,\r\n      }\r\n    case SET_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        resultsFromSearch: action.bookTitle,\r\n      }\r\n    case SORT_BY_TEXT_AND_AUDIO:\r\n      return {\r\n        ...state,\r\n        sortByTextAndAudio: action.bookType,\r\n      }\r\n    case SET_GENRE_LIST:\r\n      return {\r\n        ...state,\r\n        genreList: action.genreList\r\n      }\r\n    case SELECTED_GENRE:\r\n      return {\r\n        ...state,\r\n        selectedGenre: {genreTitle:action.title, genreId:action.id}\r\n      }\r\n    case SELECTED_AUTHORNAME:\r\n      return {\r\n        ...state,\r\n        selectedAuthorName: action.authorName,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const isOpenSortingAc = (isToggle) => ({type: OPEN_SORT_BY_AUTHORNAME, isToggle});\r\nexport const setAuthorNames = (authorNames) => ({type: GET_AUTHORNAMES, authorNames});\r\nexport const changeSelectedAuthorName = (name, names) => ({type: CHANGE_AUTHOR_NAME, name, names})\r\nexport const setBooksListFromSorting = (bookList) => ({type: SET_BOOK_FROM_SORTING, bookList});\r\nexport const setSearchResults = (bookTitle) => ({type: SET_SEARCH_RESULTS, bookTitle});\r\nexport const sortingByTextAndAudio = (bookType) => ({type: SORT_BY_TEXT_AND_AUDIO, bookType});\r\nexport const setGenreList = (genreList) => ({type: SET_GENRE_LIST, genreList});\r\nexport const setSelectedGenre = (title,id) => ({type: SELECTED_GENRE, title,id});\r\nexport const setSelectedAuthorName = (authorName) => ({type: SELECTED_AUTHORNAME, authorName});\r\n\r\nexport const getGenres = () => {\r\n  return (dispatch) => {\r\n    booksAPI.getGenreList().then(response => {\r\n      return dispatch(setGenreList(response.data.data))\r\n    })\r\n  }\r\n}\r\n\r\nexport const getBooksFromSorting = (title,authorName,genre) => {\r\n  return (dispatch) => {\r\n      dispatch(setFetchingToggle(true))\r\n      searchAPI.getBooks(title, authorName,genre).then(response => {\r\n        if(response.data.data) {\r\n          dispatch(setFetchingToggle(false))\r\n        }\r\n        return dispatch(setBooks(response.data.data))\r\n      })\r\n  }\r\n}\r\n\r\nexport default sortingReducers;","import Search from \"./Search\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearBooksListFromSearch, getBooksFromSearch, searchInFocus, setBookTitle} from \"../../redux/SearchReducer\";\r\nimport {setSearchResults} from \"../../redux/sortingReducers\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    bookTitle: state.searching.bookTitle,\r\n    booksListFromSearch:state.searching.booksListFromSearch,\r\n    sortingResults: state.searching.sortingResults,\r\n    inFocus: state.searching.inFocus,\r\n    selectedGenreId: state.sorting.selectedGenre.genreId,\r\n    selectedAuthorName: state.sorting.selectedAuthorName\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setBookTitle, getBooksFromSearch,clearBooksListFromSearch,setSearchResults,searchInFocus})(Search)\r\n","export default __webpack_public_path__ + \"static/media/home.56990ff1.svg\";","//global dependencies\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//components\r\nimport Favorites from \"../../common/Favorites/Favorites\";\r\nimport SearchContainer from \"../../common/Search/SearchContainer\";\r\n// import Menu from \"../../common/Menu/Menu\";\r\n\r\n//images\r\nimport home from './images/home.svg'\r\n\r\n//styles\r\nimport './style-header.css';\r\n\r\nconst Header = (props) => {\r\n\r\n  return (\r\n    <header className={\"header\"}>\r\n      <div className={\"header-inner\"}>\r\n        <div className={\"header-logo\"}>\r\n          {\r\n            props.startPage\r\n              ? <Link to={location => ({...location, pathname: \"/login\"})} className={\"header-inngang\"} > inngang </Link>\r\n              : <div className={\"header-home\"}><Link to={location => ({...location, pathname: \"/\"})}> <img src={home} alt=\"logo\"/> </Link></div>\r\n          }\r\n        </div>\r\n        <SearchContainer hideSearch={props.hideSearch}/>\r\n        {\r\n          props.startPage && (\r\n            <Favorites />\r\n          )\r\n        }\r\n        {/*<Menu />*/}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/headphone.f55281dd.svg\";","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport headPhone from \"../../../images/controls/headphone.svg\";\r\n\r\nconst FairytalesItem = (props) => {\r\n\r\n  return (\r\n    <li onClick={() => props.price && props.price > 0 ? props.handleOpenModalForBuyBook(props.id) : null}  key={props.id} className={props.price && props.price > 0 ? 'book-item blocked' : 'book-item'}>\r\n      <div onClick={(event) => props.handleSetFavorites(event,props.id)} className={props.currentfavoriteBook === props.id ? 'book-favorites active' : 'book-favorites'}>\r\n        <svg data-id={props.id} width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path data-id={props.id} d=\"M14.2604 23.2714C14.1603 23.3309 14.0736 23.3816 14.0017 23.4233C13.9297 23.381 13.8426 23.3293 13.742 23.2689C13.4186 23.0744 12.9552 22.7885 12.3986 22.4246C11.2845 21.6963 9.80153 20.6586 8.32102 19.4188C6.83813 18.1771 5.37223 16.7446 4.28072 15.2292C3.18541 13.7084 2.5 12.1498 2.5 10.6451C2.5 7.24299 5.20714 4.5002 8.52802 4.50022L8.53199 4.50019C10.5641 4.48405 12.4678 5.52439 13.5785 7.26576L13.9976 7.92287L14.4202 7.26799C15.5391 5.53393 17.4392 4.49542 19.4701 4.5002C22.785 4.51696 25.4831 7.25053 25.5 10.6463C25.4996 12.1764 24.8131 13.7473 23.7189 15.2709C22.6278 16.7903 21.1624 18.2193 19.6799 19.4547C18.1998 20.6881 16.7173 21.7165 15.6034 22.4371C15.047 22.7971 14.5838 23.0795 14.2604 23.2714Z\" />\r\n        </svg>\r\n      </div>\r\n      <Link className={\"book-link\"} to={props.price && props.price > 0? '#' : `./book/${props.id}/`} onClick={() => {\r\n        if (props.currentBookId !== undefined) {\r\n          for (let elem of props.currentBookId) {\r\n            if (elem === props.id) {\r\n              return null\r\n            }\r\n          }\r\n        }\r\n        props.setTouchedBooks(props.item)\r\n      }}>\r\n        <div className={'book-image'}>\r\n          <img className={'book-mainImg'} src={props.image} alt={`${props.title}`}/>\r\n          {(props.item.bookSound?.regions && props.item.bookSound?.regions.length > 0) && (\r\n            <div className={'book-audio'}>\r\n              <img  src={headPhone} alt=\"is listen\"/>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Link>\r\n      <div className={'book-info'}>\r\n        {props.hasProgress > 0 && (\r\n          <div className={'book-progressBar'}>\r\n            {/*{*/}\r\n            {/*  +hasProgress === 100*/}\r\n            {/*    ? <p className={'book-fullyRead'}>Read</p>*/}\r\n            {/*    : <p>Read ( {+hasProgress}% )</p>*/}\r\n            {/*}*/}\r\n            <input className={+props.hasProgress === 100 ? 'book-finished' : ''} readOnly={true}\r\n                   value={+props.hasProgress} min={0} max={100} type=\"range\"/>\r\n          </div>\r\n        )}\r\n        <p className={'book-title'}>{props.title}</p>\r\n        {/*{<p className={'book-price'}>{item.price && item.price > 0 ? `${item.price} NOK` : 'Free'} </p>}*/}\r\n      </div>\r\n\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FairytalesItem;","//global dependencies\r\nimport React, {useContext} from 'react';\r\nimport {Context} from \"../../utils/Context\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\n//components\r\nimport FairytalesItem from \"./FairytalesItem/FairytalesItem\";\r\n\r\n//styles\r\nimport './FairytalesList.css';\r\n\r\nconst FairytalesList = (props) => {\r\n\r\n  let publishedBook = props.books.filter(item => item.published === true);\r\n  let favoritesBooks = props.favoritesList;\r\n\r\n  const {buyBookModalOpened,setBuyBookModalOpened} = useContext(Context)\r\n\r\n  // записать id книг которые выбрал пользователь\r\n  let handleSetFavorites = (event,id) => {\r\n    event.stopPropagation()\r\n    if(event.target.dataset.id === String(id)) {\r\n      props.setFavoritesBooks(id)\r\n      event.target.closest('div').classList.toggle('active')\r\n    }\r\n  }\r\n\r\n  // вызвать модалку для кники, которую пользователь хочет купить\r\n  let handleOpenModalForBuyBook = (bookId) => {\r\n    props.setIdOfCurrentBookForBuy(bookId)\r\n    setBuyBookModalOpened(!buyBookModalOpened)\r\n  }\r\n\r\n  let fairytalesItem =  <TransitionGroup  component={\"ul\"} className={props.books.length <= 3 ? 'book-list books-booksWidth' : 'book-list' }> { publishedBook\r\n    .filter(item => props.showFreeBooks ? item.price === null : item)\r\n    .filter(item => {\r\n      if (props.sortByTextAndAudio === 'Show only with text') {\r\n        return (!item.bookSound || !item.bookSound.regions)\r\n      } else if (props.sortByTextAndAudio === 'Show only with audio') {\r\n        return item.bookSound?.regions\r\n      } else {\r\n        return item\r\n      }\r\n    })\r\n    .map(item => {\r\n      // let y = props.touchedBooks.filter(elem => elem.id === item.id).map(elem => elem.pageNumber);\r\n\r\n      let hasProgress = props.touchedBooks.filter(el => el.id === item.id).map(el => el.progress).join('');\r\n      let currentfavoriteBook;\r\n      if(favoritesBooks.length > 0) {\r\n        currentfavoriteBook = favoritesBooks.find(itm => +itm === +item.id)\r\n      }\r\n\r\n      return (\r\n        <CSSTransition\r\n          key={item.id}\r\n          timeout={500}\r\n          classNames=\"opacity\"\r\n        >\r\n            <FairytalesItem\r\n              price={item.price}\r\n              id={item.id}\r\n              item={item}\r\n              title={item.title}\r\n              image={item.image}\r\n              handleSetFavorites={handleSetFavorites}\r\n              setTouchedBooks={props.setTouchedBooks}\r\n              handleOpenModalForBuyBook={handleOpenModalForBuyBook}\r\n              currentfavoriteBook={currentfavoriteBook}\r\n              hasProgress={hasProgress}\r\n              currentBookId={props.currentBookId}\r\n            />\r\n        </CSSTransition>\r\n      )\r\n    }) } </TransitionGroup>\r\n  return (\r\n      <>\r\n        {\r\n          (props.books.length === 0  || fairytalesItem.props.children[1].length === 0) && !props.isFetchingToggle\r\n            ? <div style={{marginTop: 50,color:'#fff'}} >Unfortunately no results were found</div>\r\n            : fairytalesItem\r\n        }\r\n      </>\r\n  );\r\n\r\n};\r\n\r\nexport default FairytalesList;","import {connect} from \"react-redux\";\r\nimport FairytalesList from \"./FairytalesList\";\r\nimport {\r\n  getBooksList,\r\n  setBooksFromSearch, setFavoritesBooks, setIdOfCurrentBookForBuy,\r\n  setTouchedBooks\r\n} from \"../../redux/FairytalesListReducer\";\r\nimport React, {useEffect} from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport {getBooksFromSorting, getGenres} from \"../../redux/sortingReducers\";\r\n\r\nconst FeirytalesListContainer = (props) => {\r\n\r\n  let currentBookId\r\n  if(props.touchedBooks.length > 0) {\r\n    currentBookId = props.touchedBooks.map(item => item.id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {setIdOfCurrentBookForBuy(null)}\r\n    // eslint-disable-next-line\r\n  },[])\r\n\r\n  // загрузить книги из поиска\r\n  useEffect(() => {\r\n    if(props.booksListFromSearch.length > 0) {\r\n      props.setBooksFromSearch(props.booksListFromSearch)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props.booksListFromSearch ])\r\n\r\n  useEffect(() => {\r\n    if(props.books.length > 0) {\r\n      props.getGenres()\r\n    }\r\n    // eslint-disable-next-line\r\n  },[props.books.length])\r\n\r\n  return (\r\n    <FairytalesList {...props} currentBookId={currentBookId} />\r\n  )\r\n}\r\n\r\nlet withRouterFeirytalesListContainer = withRouter(FeirytalesListContainer)\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    books: state.fairytalesList.books,\r\n    touchedBooks: state.fairytalesList.touchedBooks,\r\n    booksListFromSearch:state.searching.booksListFromSearch,\r\n    booksListFromSorting: state.sorting.booksListFromSorting,\r\n    showFreeBooks: state.fairytalesList.showFreeBooks,\r\n    sortByTextAndAudio: state.sorting.sortByTextAndAudio,\r\n    isAuth: state.login.isAuth,\r\n    favoritesList: state.fairytalesList.favoritesList,\r\n    selectedGenreId: state.sorting.selectedGenre.genreId,\r\n    selectedAuthorName: state.sorting.selectedAuthorName,\r\n    isFetchingToggle: state.fairytalesList.isFetchingToggle,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getBooksList,setBooksFromSearch,getBooksFromSorting,setTouchedBooks,setFavoritesBooks,setIdOfCurrentBookForBuy,getGenres})(withRouterFeirytalesListContainer)","import classes from './Sorting.module.css';\r\nimport {useEffect, useRef, useState} from \"react\";\r\n\r\nconst Sorting = (props) => {\r\n\r\n  const sortRef1 = useRef(null);\r\n  const sortRef2 = useRef(null);\r\n  const sortRef3 = useRef(null);\r\n  // получаем ссылку на input\r\n  const inputRef = useRef(null);\r\n  const [genreListToggle, setGenreListToggle] = useState(false)\r\n  // По клику на пункт в выпадающем списке, менять название на тот что выбран\r\n\r\n  let handleClick = (e) => {\r\n    if (e.currentTarget.textContent === 'Av forfatter') {\r\n      e.currentTarget.textContent = ''\r\n    }\r\n    props.setSelectedAuthorName(e.currentTarget.textContent)\r\n  }\r\n\r\n  // диспатчим экшен в сторе при изменении чекбокса\r\n  let handleChange = () => {\r\n    props.showOnlyFreeBooks(inputRef.current.checked)\r\n  }\r\n\r\n  let changeSortingByTextAndAudio = (e) => {\r\n    props.sortingByTextAndAudio(e.target.innerHTML)\r\n  }\r\n\r\n  let handleClickGenres = () => {\r\n    setGenreListToggle(!genreListToggle)\r\n  }\r\n\r\n  let handeleGenreClick = (title,id) => {\r\n    props.setSelectedGenre(title,id)\r\n  }\r\n\r\n  let authorNames\r\n\r\n  if (props.authorNames.length > 1) {\r\n    authorNames = props.authorNames[1].map((item, index) => <li onClick={handleClick} key={index}>{item}</li>)\r\n  }\r\n\r\n  // По клику вне сортировки закрывать список с авторами\r\n  useEffect(() => {\r\n    const onClick = e => (sortRef1.current && sortRef1.current.contains(e.target)) || props.isOpenSortingAc(false)\r\n    document.addEventListener('click', onClick);\r\n    return () => document.removeEventListener('click', onClick);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // По клику вне сортировки закрывать список с авторами\r\n  useEffect(() => {\r\n    const onClick = e => (sortRef2.current && sortRef2.current.contains(e.target)) || props.setSortingToggle(false);\r\n    document.addEventListener('click', onClick);\r\n    return () => document.removeEventListener('click', onClick);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // По клику вне сортировки закрывать список с авторами\r\n  useEffect(() => {\r\n    const onClick = e => (sortRef3.current && sortRef3.current.contains(e.target)) || setGenreListToggle(false);\r\n    document.addEventListener('click', onClick);\r\n    return () => document.removeEventListener('click', onClick);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // при начальной загрузке делает запрос за книгами, потом при изменении сортировки делает запросы за книгами\r\n  useEffect(() => {\r\n\r\n      props.getBooksFromSorting(props.bookTitle,props.selectedAuthorName,props.selectedGenreId)\r\n    // eslint-disable-next-line\r\n  },[props.selectedAuthorName, props.selectedGenreId])\r\n\r\n  return (\r\n    <div  className={classes.list}>\r\n      <ul ref={sortRef1}>\r\n        <li  onClick={() => {\r\n          props.isOpenSortingAc(!props.authorNamesIsToggle)\r\n        }} className={classes.item}>\r\n          <p>\r\n            {\r\n              props.selectedAuthorName !== ''\r\n                ? props.selectedAuthorName\r\n                : 'Av forfatter'\r\n            }\r\n          </p>\r\n          {props.authorNames.length > 1 && props.authorNamesIsToggle && (\r\n            <ul  className={classes.inner}>\r\n              {authorNames}\r\n            </ul>\r\n          )}\r\n        </li>\r\n      </ul>\r\n      <ul ref={sortRef3}>\r\n        <li onClick={() => handleClickGenres()} className={classes.item}>\r\n          <p>\r\n            {\r\n              props.selectedGenre?.genreTitle !== ''\r\n                ? props.selectedGenre.genreTitle\r\n                : 'Sjanger'\r\n            }\r\n          </p>\r\n          {\r\n            props.genreList?.length > 0 && genreListToggle && (\r\n              <ul  className={classes.inner}>\r\n                <li onClick={() => handeleGenreClick('','')}>Sjanger</li>\r\n                {\r\n                  props.genreList.map(item => <li onClick={() => handeleGenreClick(item.title,item.id) } key={item.id}>{item.title}</li>)\r\n                }\r\n              </ul>\r\n            )\r\n          }\r\n        </li>\r\n      </ul>\r\n      <ul ref={sortRef2}>\r\n        <li className={classes.item} onClick={() => props.setSortingToggle(!props.sortingToggle)} >\r\n          <p>{props.sortByTextAndAudio}</p>\r\n          {props.sortingToggle && (\r\n            <ul className={classes.inner}>\r\n              <li onClick={(e) => changeSortingByTextAndAudio(e)}>Show all</li>\r\n              <li onClick={(e) => changeSortingByTextAndAudio(e)}>Show only with text</li>\r\n              <li onClick={(e) => changeSortingByTextAndAudio(e)}>Show only with audio</li>\r\n            </ul>\r\n          )}\r\n        </li>\r\n      </ul>\r\n      <div className={classes.freeBookSort}>\r\n        <p>\r\n          <input onChange={handleChange} ref={inputRef} checked={props.showFreeBooks} id=\"freeBooks\" type=\"checkbox\"/>\r\n          <label htmlFor=\"freeBooks\">Show available</label>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sorting;","import Sorting from \"./Sorting\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  changeSelectedAuthorName, getBooksFromSorting,\r\n  isOpenSortingAc,\r\n  setAuthorNames,\r\n  setBooksListFromSorting, setSelectedAuthorName, setSelectedGenre, sortingByTextAndAudio\r\n} from \"../../redux/sortingReducers\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {setSortingResults} from \"../../redux/SearchReducer\";\r\nimport {showOnlyFreeBooks} from \"../../redux/FairytalesListReducer\";\r\n\r\nconst SortingContainer = (props) => {\r\n\r\n  const [sortingToggle, setSortingToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.books.length > 0) {\r\n      // Проходим по всем опублиованным книгам и получаем имена авторов\r\n      let emptyAuthor = props.books.filter(item => item.published).map(item => item.author);\r\n      // Добавляем в начала массива имен авторов общее название ( показать всех )\r\n      emptyAuthor.unshift(\"Av forfatter\");\r\n      let uniqueSet = new Set(emptyAuthor);\r\n      // сетаем получившийся массив в стор\r\n      props.setAuthorNames([...uniqueSet])\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props.books])\r\n\r\n  return (\r\n    <Sorting {...props} setSortingToggle={setSortingToggle}  sortingToggle={sortingToggle} />\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    books: state.fairytalesList.books,\r\n    authorNames: state.sorting.authorNames,\r\n    authorNamesIsToggle: state.sorting.authorNamesIsToggle,\r\n    booksListFromSorting: state.sorting.booksListFromSorting,\r\n    bookTitle: state.searching.bookTitle,\r\n    sortingResults: state.searching.sortingResults,\r\n    sortByTextAndAudio: state.sorting.sortByTextAndAudio,\r\n    showFreeBooks: state.fairytalesList.showFreeBooks,\r\n    genreList: state.sorting.genreList,\r\n    selectedGenre: state.sorting.selectedGenre,\r\n    selectedGenreId: state.sorting.selectedGenre.genreId,\r\n    selectedAuthorName: state.sorting.selectedAuthorName\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {isOpenSortingAc, setAuthorNames,\r\n                                                          changeSelectedAuthorName, setBooksListFromSorting ,\r\n                                                          getBooksFromSorting, setSortingResults,showOnlyFreeBooks,\r\n                                                          sortingByTextAndAudio,setSelectedGenre,setSelectedAuthorName })(SortingContainer)","//global depenencies\r\nimport React, {useContext} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Context} from \"../../../utils/Context\";\r\nimport {setFavoritesBooks, setIdOfCurrentBookForBuy} from \"../../../redux/FairytalesListReducer\";\r\n\r\n//styles\r\nimport './style-favorites-list.css';\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\nconst FavoritesList = (props) => {\r\n\r\n  const {buyBookModalOpened, setBuyBookModalOpened} = useContext(Context);\r\n\r\n  let x = props.books.filter(item => {\r\n    for (let el of props.favoritesList) {\r\n      if (item.id === el) {\r\n        return item\r\n      }\r\n    }\r\n  }).map(item => item)\r\n\r\n  let handleRemove = (event, id) => {\r\n    event.stopPropagation()\r\n    props.setFavoritesBooks(id)\r\n  }\r\n\r\n  let handleOpenModalForBuyBook = (bookId) => {\r\n    props.setIdOfCurrentBookForBuy(bookId)\r\n    setBuyBookModalOpened(!buyBookModalOpened)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className={\"fav-title\"}>\r\n        Favoritt <span>({x.length})</span>\r\n      </h2>\r\n      {\r\n        props.favoritesList.length > 0\r\n          ? <TransitionGroup component={\"ul\"} className={\"fav-list\"}>\r\n            {x.map(item => {\r\n              return (\r\n                <CSSTransition\r\n                  key={item.id}\r\n                  timeout={500}\r\n                  classNames=\"opacity\"\r\n                >\r\n                  <li onClick={() => item.price && item.price > 0 ? handleOpenModalForBuyBook(item.id) : null}\r\n                      className={item.price && item.price > 0 ? 'fav-item blocked' : 'fav-item'}>\r\n                      <span onClick={(event) => {\r\n                        handleRemove(event, item.id)\r\n                      }} className={\"fav-remove\"}/>\r\n                    <Link className={\"fav-link\"} to={item.price && item.price > 0 ? '#' : `./book/${item.id}/`}>\r\n                      <div className={\"fav-image\"}>\r\n                        <img src={item.image} alt={item.title}/>\r\n                      </div>\r\n                    </Link>\r\n                    <p>{item.title}</p>\r\n                  </li>\r\n                </CSSTransition>\r\n              )\r\n            })}\r\n          </TransitionGroup>\r\n          : 'Ни одна книга не выбрана'\r\n      }\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    favoritesList: state.fairytalesList.favoritesList,\r\n    books: state.fairytalesList.books\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setFavoritesBooks, setIdOfCurrentBookForBuy})(FavoritesList);","export default __webpack_public_path__ + \"static/media/grass-bg.9977dca0.svg\";","//global dependencies\r\nimport React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport './styles-currentBookToBuy.css';\r\n\r\nconst CurrentBookToBuy = (props) => {\r\n\r\n  let currentBook = props.books.filter(item => item.id === props.idOfCurrentBookForBuy)\r\n\r\n  return (\r\n    <div className={\"current-book\"}>\r\n      {\r\n        currentBook.map(item => {\r\n          return (\r\n            <div key={item.id} className={item.price && item.price > 0 ? \"current-book-item blocked\" : \"current-book-item\"}>\r\n              <div className={\"current-book-img\"}>\r\n                <img src={item.image} alt={item.title}/>\r\n              </div>\r\n              <div className=\"current-book-box\">\r\n                <p className={\"current-book-title\"}> {item.title}</p>\r\n                <p className={\"current-book-price\"}>{item.price} NOK</p>\r\n                <button className={\"current-book-button\"}>Kjøpe</button>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    books: state.fairytalesList.books,\r\n    idOfCurrentBookForBuy: state.fairytalesList.idOfCurrentBookForBuy\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(CurrentBookToBuy);","export default __webpack_public_path__ + \"static/media/spiner.c2cb9ed7.svg\";","import React from 'react';\r\nimport spinner from '../../images/icons/spiner.svg';\r\n\r\nconst styles = {\r\n  transform: 'translate(-50%, -50%)',\r\n  position: 'absolute',\r\n  left: '50%',\r\n  top: '50%',\r\n}\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <img src={spinner} style={styles} alt=\"\"/>\r\n  );\r\n};\r\n\r\nexport default Preloader;","//global dependencies\r\nimport React, {useState} from \"react\";\r\nimport {Context} from \"../../utils/Context\";\r\n\r\n//components\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport FairytalesListContainer from \"../../components/FairytalesList/FairytalesListContainer\";\r\nimport SortingContainer from \"../../components/Sorting/SortingContainer\";\r\nimport FavoritesList from \"../../common/Favorites/FavoritesList/FavoritesList\";\r\n\r\n//styles\r\nimport classes from './Start.module.css';\r\n\r\n//images\r\nimport bgGrass from './../../images/grass-bg.svg';\r\nimport CurrentBookToBuy from \"../../common/CurrentBookToBuy/CurrentBookToBuy\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nconst Start = (props) => {\r\n\r\n  const [startPage,setStartPage] = useState(true)\r\n\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n  const [buyBookModalOpened, setBuyBookModalOpened] = useState(false);\r\n\r\n  const isFetching = useSelector(state => state.fairytalesList.isFetchingToggle)\r\n\r\n  return (\r\n    <Context.Provider value={{modalOpened, setModalOpened,setBuyBookModalOpened,buyBookModalOpened}} >\r\n      <div className={classes.container}>\r\n        <div className=\"wrapper\">\r\n          <Header startPage={startPage} />\r\n          <SortingContainer />\r\n          {\r\n            isFetching ? <Preloader /> : <FairytalesListContainer />\r\n          }\r\n\r\n        </div>\r\n        <img className={classes.image} src={bgGrass} alt=\"decor\"/>\r\n        {\r\n          modalOpened && (\r\n            <Modal dataName={'favotiresBooks'} maxWidth={530}>\r\n              <FavoritesList />\r\n            </Modal>\r\n          )\r\n        }\r\n        {\r\n          buyBookModalOpened && (\r\n            <Modal dataName={'buyBook'} maxWidth={470}>\r\n                <CurrentBookToBuy />\r\n            </Modal>\r\n          )\r\n        }\r\n      </div>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Start;","export default __webpack_public_path__ + \"static/media/book-arrow.26ec2021.svg\";","export default __webpack_public_path__ + \"static/media/controlsPause.851b3779.svg\";","export default __webpack_public_path__ + \"static/media/controlsPlay.48b91023.svg\";","export default __webpack_public_path__ + \"static/media/controlsVolume.66061fb1.svg\";","export default __webpack_public_path__ + \"static/media/controlsRewindNext.c396e949.svg\";","export default __webpack_public_path__ + \"static/media/controlsRewindBack.b4f0fcd3.svg\";","//global dependencies\r\nimport React, {useCallback, useEffect, useRef, useState} from \"react\";\r\n\r\n//styles\r\nimport '../../pageFlip.css';\r\nimport \"./styles.css\";\r\n\r\n// icons - start\r\nimport Pause from \"../../../../images/controls/controlsPause.svg\";\r\nimport Play from \"../../../../images/controls/controlsPlay.svg\";\r\nimport volume from \"../../../../images/controls/controlsVolume.svg\";\r\nimport rewindNextIcon from \"../../../../images/controls/controlsRewindNext.svg\";\r\nimport rewindBackIcon from \"../../../../images/controls/controlsRewindBack.svg\";\r\nconst Controls = (props) => {\r\n\r\n  const [volumeOff, setVolumeOff] = useState(false)\r\n  const [isPlaying, setIsPlaying] = useState(false)\r\n  const [volumeValue, setvolumeValue] = useState(0.5)\r\n  const [duration, setDuration] = useState(0)\r\n  const [currentTime, setCurrentTime] = useState(props.currentBook.currentTime || 0)\r\n\r\n  const audioRef = useRef();\r\n  const audio = audioRef.current;\r\n  const currentTimeRef = useRef(+currentTime);\r\n\r\n  let currentBookSoundRegions = props.currentBook.bookSound.regions.find(item => item.data.pageNumber === +props.pageNum  );\r\n\r\n  useEffect(() => {\r\n\r\n    currentTimeRef.current = +currentTime;\r\n\r\n    if(currentBookSoundRegions && (currentTimeRef.current  > Math.ceil(currentBookSoundRegions.end)) && currentBookSoundRegions.data.pageNumber === +props.currentBook.pageNumber) {\r\n      props.setPageNumbersForOpenedBooks(+props.bookId, +props.nextPage + 1, props.currentBook.bookSound?.regions ? +props.currentRegionsOfNextPage.start : 0);\r\n      props.onFlipToNext()\r\n\r\n    }\r\n\r\n    if(audio && +currentTime === +duration) {\r\n      setIsPlaying(false)\r\n      audio.pause()\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentTime, props.pageNum]);\r\n\r\n  useEffect(()=> {\r\n    setCurrentTime(props.currentBook.currentTime)\r\n\r\n    // eslint-disable-next-line\r\n  }, [props.currentBook.currentTime])\r\n\r\n  const regionCreatedHandler = useCallback(\r\n    () => {\r\n      props.setCurrentTimeForListenedBook(props.currentBook.id, +currentTimeRef.current)\r\n      // eslint-disable-next-line\r\n    }, [currentTimeRef])\r\n\r\n  useEffect(() => {\r\n\r\n    return () => {regionCreatedHandler()}\r\n\r\n    // eslint-disable-next-line\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if(audio) {\r\n      audio.currentTime = props.currentBook.currentTime\r\n\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props.pageNum])\r\n\r\n  // В момент переворачивания страницы\r\n  useEffect(() => {\r\n    if(audio && !audio.paused && props.bookState === 'flipping' && currentBookSoundRegions) {\r\n      audio.pause()\r\n      setIsPlaying(false)\r\n      audio.currentTime = +currentBookSoundRegions.start - 2.2\r\n    }\r\n\r\n    if(audio && props.bookState === 'read' && !props.currentBook.isPause ) {\r\n      audio.play()\r\n      setIsPlaying(true)\r\n    }\r\n// eslint-disable-next-line\r\n  }, [props.bookState])\r\n\r\n\r\n\r\n  // audio - start\r\n\r\n  const handleChange = (e) => {\r\n    setvolumeValue(e.target.value)\r\n    return audio.volume = e.target.value\r\n  }\r\n\r\n  const play = () => {\r\n\r\n    if(props.currentBook.currentTime > 0) {\r\n      audio.currentTime =  props.currentBook.currentTime ;\r\n    }\r\n\r\n    if(currentTime) {\r\n      audio.currentTime = currentTime\r\n    }\r\n\r\n    if(!isPlaying) {\r\n      props.setCurrentTimeForListenedBook(props.currentBook.id, +currentTimeRef.current)\r\n      setIsPlaying(true)\r\n      audio.play()\r\n      if(+currentTime === +duration) {\r\n        props.setPageNumbersForOpenedBooks(+props.bookId, 1,0)\r\n      }\r\n      props.setStateOfAudio(props.currentBook.id,false)\r\n    }\r\n\r\n    if(isPlaying) {\r\n      props.setCurrentTimeForListenedBook(props.currentBook.id, +currentTimeRef.current)\r\n      setIsPlaying(false)\r\n      audio.pause();\r\n      props.setStateOfAudio(props.currentBook.id,true)\r\n    }\r\n\r\n  }\r\n\r\n  const rewindBack = () => {\r\n\r\n    if(props.currentBook.currentTime > 0) {\r\n      audio.currentTime = props.currentBook.currentTime;\r\n    }\r\n\r\n    if(audio.currentTime === 0) {\r\n      Math.max(0, audio.currentTime -= 15)\r\n\r\n    } else {\r\n      audio.currentTime = props.currentBook.currentTime;\r\n      Math.max(0, audio.currentTime -= 15)\r\n    }\r\n\r\n    if(( +audio.currentTime <= +currentBookSoundRegions.start.toFixed(1)) && props.pageNum !== 1) {\r\n      props.onFlipToPrev()\r\n    }\r\n\r\n    props.setCurrentTimeForListenedBook(props.currentBook.id, +Math.max(0, audio.currentTime))\r\n  }\r\n\r\n  const rewindNext = () => {\r\n\r\n    if(props.currentBook.currentTime > 0) {\r\n      audio.currentTime = props.currentBook.currentTime;\r\n    }\r\n\r\n    if(audio.currentTime === 0) {\r\n      audio.currentTime += 15\r\n    } else {\r\n      audio.currentTime = props.currentBook.currentTime;\r\n      Math.min(+duration,  audio.currentTime += 15)\r\n    }\r\n\r\n    // В суловии текущее время не должно быть равно общему времени, иначе сработает условие на последней странице и будет ошибка.\r\n    if(( audio.currentTime.toFixed(1) > +currentBookSoundRegions.end.toFixed(1)) && props.pageNum > 0) {\r\n      props.setPageNumbersForOpenedBooks(+props.bookId, +props.nextPage + 1, props.currentBook.bookSound?.regions ? +props.currentRegionsOfNextPage.start : 0);\r\n      props.onFlipToNext()\r\n    } else {\r\n      props.setCurrentTimeForListenedBook(props.currentBook.id, +Math.min(duration, audio.currentTime))\r\n    }\r\n\r\n  }\r\n\r\n  function secondsToHms(seconds) {\r\n    let duration;\r\n\r\n    if (!seconds && !props.currentBook.currentTime ) {\r\n      return '0 : 00'\r\n\r\n    } else if (!seconds) {\r\n      duration = Math.ceil(props.currentBook.currentTime)\r\n\r\n    } else {\r\n      duration = Math.ceil(seconds)\r\n    }\r\n\r\n    let hours = duration / 3600\r\n    duration = duration % 3600\r\n\r\n    let min = parseInt(duration / 60)\r\n    duration = duration % 60\r\n\r\n    let sec = parseInt(duration)\r\n\r\n    if (sec < 10) {\r\n      sec = `0${sec}`\r\n    }\r\n    if (min < 10) {\r\n      min = `${min}`\r\n    }\r\n\r\n    if (parseInt(hours, 10) > 0) {\r\n      return `${parseInt(hours, 10)}h ${min}m ${sec}s`\r\n    } else if (min === 0) {\r\n      return `0 : ${sec}`\r\n    } else {\r\n      return `${min} : ${sec}`\r\n    }\r\n  }\r\n\r\n  // audio -end\r\n\r\n  return (\r\n    <div className={`player`}>\r\n      <audio src={props.currentBook.bookSound.file}\r\n             ref={audioRef}\r\n             onLoadedMetadata={(e) => {\r\n               setDuration(e.currentTarget.duration.toFixed(1))\r\n             }}\r\n             onTimeUpdate={ (e) => {\r\n               setCurrentTime(e.currentTarget.currentTime.toFixed(1));\r\n             } }\r\n      />\r\n      <div className={`controls`}>\r\n        <div onClick={play} className={`controlPlay`}>\r\n          {\r\n            isPlaying ? <img src={Pause} alt=\"player controls\"/> : <img src={Play} alt=\"player controls\"/>\r\n          }\r\n        </div>\r\n        <div onClick={() => {\r\n          setVolumeOff(!volumeOff)\r\n        }} className={`controlVolume`}>\r\n          <img src={volume} alt=\"player controls\"/>\r\n          {volumeOff && (\r\n            <input onChange={handleChange} className={`volumeRange`} type=\"range\" min={0.1}\r\n                   value={+volumeValue} step={0.1} max={1.0}/>\r\n          )}\r\n        </div>\r\n        <div onClick={rewindBack} className={`controlRewindPrev`}>\r\n          <img src={rewindBackIcon} alt=\"player controls\"/>\r\n        </div>\r\n        <div onClick={rewindNext} className={`controlRewindNext`}>\r\n          <img src={rewindNextIcon} alt=\"player controls\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`playerTimer`}>\r\n        <span>{secondsToHms(currentTime)}</span>\r\n        <span className={`delimeter`} > / </span>\r\n        <span>{secondsToHms(duration)}</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n//\r\n// import classes from \"./styles.css\";\r\n// // icons - start\r\n// import Pause from \"../../../images/controlsPause.svg\";\r\n// import Play from \"../../../images/controlsPlay.svg\";\r\n// import volume from \"../../../images/controlsVolume.svg\";\r\n// import rewindNextIcon from \"../../../images/controlsRewindNext.svg\";\r\n// import rewindBackIcon from \"../../../images/controlsRewindBack.svg\";\r\n// // icons - end\r\n//\r\n// const Controls = (props) => {\r\n//\r\n//   const [volumeOff, setVolumeOff] = useState(false)\r\n//   const [isPlaying, setIsPlaying] = useState(false)\r\n//   const [volumeValue, setvolumeValue] = useState(0.5)\r\n//   const [duration, setDuration] = useState(0)\r\n//   const [currentTime, setCurrentTime] = useState(props.currentBook.currentTime)\r\n//\r\n//   const history = useHistory();\r\n//\r\n//   const audioRef = useRef();\r\n//   const audio = audioRef.current;\r\n//   const currentTimeRef = useRef(+currentTime);\r\n//\r\n//   let currentBookSoundRegions = props.currentBook.bookSound.regions.find(item => item.data.pageNumber === +props.pageNum);\r\n//\r\n//   useEffect(() => {\r\n//     currentTimeRef.current = +currentTime;\r\n//     if(+currentTimeRef.current > +currentBookSoundRegions.end) {\r\n//       props.setPageNumbersForOpenedBooks(+props.bookId, !props.pageNum ? 1 : `${props.nextPage}`,+currentTimeRef.current)\r\n//       history.push(`/book/${+props.bookId}/${!props.pageNum ? 1 : props.nextPage}`)\r\n//     }\r\n//\r\n//     if(audio && +currentTime === +duration) {\r\n//       setIsPlaying(false)\r\n//       audio.pause()\r\n//     }\r\n//\r\n//     // console.log(currentBookSoundRegions)\r\n//     // if(currentBookSoundRegions) {\r\n//     //   setDuration(audio.duration)\r\n//     //   console.log(audio.duration)\r\n//     // }\r\n//\r\n//     // eslint-disable-next-line\r\n//   }, [currentTime]);\r\n//\r\n//   useEffect(()=> {\r\n//     setCurrentTime(props.currentBook.currentTime)\r\n//\r\n//     // eslint-disable-next-line\r\n//   }, [props.currentBook.currentTime])\r\n//\r\n//   const regionCreatedHandler = useCallback(\r\n//     () => {\r\n//       props.setCurrentTimeForListenedBook(props.currentBook.id, +currentTimeRef.current)\r\n//\r\n//       // eslint-disable-next-line\r\n//     }, [currentTimeRef])\r\n//\r\n//   useEffect(() => {\r\n//     return () => {regionCreatedHandler()}\r\n//     // eslint-disable-next-line\r\n//   },[])\r\n//\r\n//   useEffect(() => {\r\n//     if(audio) {\r\n//       audio.currentTime = props.currentBook.currentTime\r\n//     }\r\n//     // eslint-disable-next-line\r\n//   }, [props.pageNum])\r\n//\r\n//   // audio - start\r\n//\r\n//   const handleChange = (e) => {\r\n//     setvolumeValue(e.target.value)\r\n//     return audio.volume = e.target.value\r\n//   }\r\n//\r\n//   const play = () => {\r\n//\r\n//     if(props.currentBook.currentTime > 0) {\r\n//       audio.currentTime =  props.currentBook.currentTime ;\r\n//     }\r\n//\r\n//     if(currentTime) {\r\n//       audio.currentTime = currentTime\r\n//     }\r\n//\r\n//     if(!isPlaying) {\r\n//       props.setCurrentTimeForListenedBook(props.currentBook.id, +currentTimeRef.current)\r\n//       setIsPlaying(true)\r\n//       audio.play()\r\n//       if(+currentTime === +duration) {\r\n//         props.setPageNumbersForOpenedBooks(+props.bookId, 1,0)\r\n//         history.push(`/book/${+props.bookId}/${1}`)\r\n//       }\r\n//     }\r\n//\r\n//     if(isPlaying) {\r\n//       props.setCurrentTimeForListenedBook(props.currentBook.id, +currentTimeRef.current)\r\n//       setIsPlaying(false)\r\n//       audio.pause();\r\n//     }\r\n//\r\n//   }\r\n//\r\n//   const rewindBack = () => {\r\n//\r\n//     if(props.currentBook.currentTime > 0) {\r\n//       audio.currentTime = props.currentBook.currentTime;\r\n//     }\r\n//\r\n//     if(audio.currentTime === 0) {\r\n//       Math.max(0, audio.currentTime -= 15)\r\n//\r\n//     } else {\r\n//        audio.currentTime = props.currentBook.currentTime;\r\n//        Math.max(0, audio.currentTime -= 15)\r\n//     }\r\n//\r\n//     if(( audio.currentTime < +currentBookSoundRegions.start) && props.pageNum !== 1) {\r\n//       props.setPageNumbersForOpenedBooks(+props.bookId, +props.pageNum === 1 ? '' : `${+props.prevPage}`, +Math.max(0, audio.currentTime));\r\n//       history.push(`/book/${+props.bookId}/${!props.pageNum ? 1 : props.prevPage}`)\r\n//     }\r\n//\r\n//     props.setCurrentTimeForListenedBook(props.currentBook.id, +Math.max(0, audio.currentTime))\r\n//   }\r\n//\r\n//   const rewindNext = () => {\r\n//     if(props.currentBook.currentTime > 0) {\r\n//       audio.currentTime = props.currentBook.currentTime;\r\n//     }\r\n//\r\n//     if(audio.currentTime === 0) {\r\n//        Math.min(duration, audio.currentTime += 15)\r\n//     } else {\r\n//       audio.currentTime = props.currentBook.currentTime;\r\n//       Math.min(duration,  audio.currentTime += 15)\r\n//     }\r\n//\r\n//     if(( +audio.currentTime.toFixed(1) >= +currentBookSoundRegions.end.toFixed(1)) && props.pageNum !== 1) {\r\n//       props.setPageNumbersForOpenedBooks(+props.bookId, +props.pageNum === 1 ? '' : `${+props.nextPage}`, +Math.max(0, audio.currentTime));\r\n//       history.push(`/book/${+props.bookId}/${!props.pageNum ? 1 : props.nextPage}`)\r\n//     }\r\n//\r\n//     if(Math.ceil(+duration) !== Math.ceil(+currentTimeRef.current)) {\r\n//       props.setCurrentTimeForListenedBook(props.currentBook.id, +Math.min(duration, audio.currentTime))\r\n//     }\r\n//   }\r\n//\r\n//   function secondsToHms(seconds) {\r\n//     let duration;\r\n//\r\n//     if (!seconds && !props.currentBook.currentTime ) {\r\n//       return '0 : 00'\r\n//\r\n//     } else if (!seconds) {\r\n//       duration = Math.ceil(props.currentBook.currentTime)\r\n//\r\n//     } else {\r\n//       duration = Math.ceil(seconds)\r\n//     }\r\n//\r\n//     let hours = duration / 3600\r\n//     duration = duration % 3600\r\n//\r\n//     let min = parseInt(duration / 60)\r\n//     duration = duration % 60\r\n//\r\n//     let sec = parseInt(duration)\r\n//\r\n//     if (sec < 10) {\r\n//       sec = `0${sec}`\r\n//     }\r\n//     if (min < 10) {\r\n//       min = `${min}`\r\n//     }\r\n//\r\n//     if (parseInt(hours, 10) > 0) {\r\n//       return `${parseInt(hours, 10)}h ${min}m ${sec}s`\r\n//     } else if (min === 0) {\r\n//       return `0 : ${sec}`\r\n//     } else {\r\n//       return `${min} : ${sec}`\r\n//     }\r\n//   }\r\n//\r\n//   // audio -end\r\n//\r\n//   return (\r\n//     <div className={classes.player}>\r\n//       <audio src={props.currentBook.bookSound.file}\r\n//              ref={audioRef}\r\n//              onLoadedMetadata={(e) => {\r\n//                setDuration(e.currentTarget.duration.toFixed(1))\r\n//\r\n//              }}\r\n//              onTimeUpdate={ (e) => {\r\n//                setCurrentTime(e.currentTarget.currentTime.toFixed(1));\r\n//\r\n//                // if(Math.ceil(+duration) === Math.ceil(e.currentTarget.currentTime)) {\r\n//                //   setIsPlaying(false)\r\n//                //   audio.pause()\r\n//                //   }\r\n//              } }\r\n//       />\r\n//       <div className={classes.controls}>\r\n//         <div onClick={play} className={classes.controlPlay}>\r\n//           {\r\n//             isPlaying ? <img src={Pause} alt=\"player controls\"/> : <img src={Play} alt=\"player controls\"/>\r\n//           }\r\n//         </div>\r\n//         <div onClick={() => {\r\n//           setVolumeOff(!volumeOff)\r\n//         }} className={classes.controlVolume}>\r\n//           <img src={volume} alt=\"player controls\"/>\r\n//           {volumeOff && (\r\n//             <input onChange={handleChange} className={classes.volumeRange} type=\"range\" min={0.1}\r\n//                    value={+volumeValue} step={0.1} max={1.0}/>\r\n//           )}\r\n//         </div>\r\n//         <div onClick={rewindBack} className={classes.controlRewindPrev}>\r\n//           <img src={rewindBackIcon} alt=\"player controls\"/>\r\n//         </div>\r\n//         <div onClick={rewindNext} className={classes.controlRewindNext}>\r\n//           <img src={rewindNextIcon} alt=\"player controls\"/>\r\n//         </div>\r\n//       </div>\r\n//\r\n//         <div className={classes.playerTimer}>\r\n//           <span>{secondsToHms(currentTime)}</span>\r\n//           <span className={classes.delimeter} > / </span>\r\n//           <span>{secondsToHms(duration)}</span>\r\n//         </div>\r\n//\r\n//     </div>\r\n//   )\r\n// }\r\n//\r\n// export default Controls;","import React from 'react';\r\n\r\nimport arrow from \"../../../images/icons/book-arrow.svg\";\r\nimport Controls from \"./Controls/Controls\";\r\n\r\nconst FlipNav = (props) => {\r\n\r\n  //По клику на кнопку назад, фиксируем предыдущую страницу\r\n  let prevButtonClick = () => {\r\n     props.setPageNumbersForOpenedBooks(+props.bookId, Math.max(+props.prevPage - 1, 0), ((props.currentBook.bookSound?.regions && props.currentBook.bookSound?.regions.length > 0) && props.currentPageNum > 1) ? props.currentRegionsOfPrevPage.start : 0);\r\n    if (props.flipRef && props.flipRef.current.pageFlip()) {\r\n      props.flipRef.current.pageFlip().flipPrev();\r\n    }\r\n  }\r\n\r\n  //По клику на кнопку вперед, фиксируем слудющую страницу\r\n  let nextButtonClick = () => {\r\n     props.setPageNumbersForOpenedBooks(+props.bookId, +props.nextPage + 1, (props.currentBook.bookSound?.regions && props.currentBook.bookSound.regions.length > 0) ? +props.currentRegionsOfNextPage.start : 0);\r\n    if (props.flipRef && props.flipRef.current.pageFlip()) {\r\n      props.flipRef.current.pageFlip().flipNext()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-flip-box\">\r\n      <button className={props.currentPageNum === 0 ? 'flip-page-arrow prev hidden' : `flip-page-arrow prev`}\r\n              type=\"button\" onClick={prevButtonClick}>\r\n        <img src={arrow} alt=\"previous page\"/>\r\n      </button>\r\n      {\r\n        (+props.currentBook.pageNumber > 0 && props.currentBook.bookSound?.regions && props.currentBook.bookSound?.regions.length > 0) && (\r\n          <Controls {...props} />\r\n        )\r\n      }\r\n      {\r\n        props.currentPageNum > 0 && (\r\n          <div className=\"flip-page-count-pages\">\r\n            <span>{`${+props.currentPageNum} - ${+props.currentPageNum + 1}`}</span>\r\n            of\r\n            <span>{props.totalPages}</span>\r\n          </div>\r\n        )\r\n      }\r\n      <button\r\n        className={+props.currentPageNum + 1 === props.totalPages ? 'flip-page-arrow next hidden' : 'flip-page-arrow next'}\r\n        type=\"button\" onClick={nextButtonClick}>\r\n        <img src={arrow} alt=\"next page\"/>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlipNav;","//global dependencies\r\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport HTMLFlipBook from \"react-pageflip\";\r\nimport {useSelector} from \"react-redux\";\r\n//styles\r\nimport './pageFlip.css';\r\n\r\n//components\r\nimport Header from \"../../components/Header/Header\";\r\nimport FlipNav from \"./FlipNav/FlipNav\";\r\nimport listenBook from \"../../images/controls/audiobook.svg\";\r\nimport {setTotalPagesForCurrentBook} from \"../../redux/FairytalesListReducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n//images - start\r\n\r\nconst FlipPageCustom = React.memo((props) => {\r\n\r\n  let bookId = props.match.params.bookId;\r\n  const isFetching = useSelector(state => state.fairytalesList.isFetchingToggle)\r\n  // Все данные по конкретной книге, которую сейчас просматривают\r\n  let currentBook = props.touchedBooks.find(item => item.id === +bookId);\r\n  let currentRegionsStart;\r\n  let currentRegionsOfNextPage;\r\n  let currentRegionsOfPrevPage;\r\n\r\n  // Получаем ref на нашу книгу\r\n  let flipRef = useRef(null);\r\n  // Устанавливаем номер текущей страницы\r\n  const [currentPageNum, setCurrentPageNum] = useState(currentBook.pageNumber || 0);\r\n  // Общее количество страниц\r\n  const [totalPages, setTotalPages] = useState(currentBook.totalPages || 0);\r\n  // какой % книги прочитан/прослушан\r\n  const [progress, setProgress] = useState(+currentBook.progress);\r\n  // Записываем состояние книги: момент переворачивания страницы, когда книга читается\r\n  const [bookState, setBookState] = useState('');\r\n  // Номер следующей страницы для предачи в redux\r\n  let nextPage = Math.min(+currentPageNum === 0 ? +currentPageNum : (+currentPageNum + 1), totalPages);\r\n  // Номер предыдущей страницы для предачи в redux\r\n  let prevPage = Math.max((+currentPageNum - 1), 0);\r\n\r\n  // Фиксируем прогресс считаем сколько страниц прочитано от общего количества страниц\r\n  useEffect(() => {\r\n    let readingProgress = Math.floor((+currentPageNum + 1) / totalPages * 100);\r\n    if(currentPageNum === 0) {\r\n      readingProgress = 0\r\n    }\r\n    setProgress(readingProgress !== Infinity ? readingProgress : 0 )\r\n    if(currentPageNum > 0) {\r\n      props.setPageNumbersForOpenedBooks(+bookId,  currentPageNum ?`${+currentPageNum}` : '', +currentBook.currentTime, progress);\r\n    }\r\n    return () => {\r\n      setProgress(readingProgress || 0 );\r\n      props.setPageNumbersForOpenedBooks(+bookId,  currentPageNum ?`${+currentPageNum}` : '', +currentBook.currentTime, progress);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentPageNum, props.bookPagesSort,progress])\r\n\r\n  // Если страница книга === 0 то добавляем класс ( который скрывает фон книги )\r\n  useEffect(() => {\r\n    if(currentPageNum === 0) {\r\n      document.querySelector('.flip-page-parent').closest('.page-flip-wrapper').classList.add('bookStart')\r\n    } else {\r\n      document.querySelector('.flip-page-parent').closest('.page-flip-wrapper').classList.remove('bookStart')\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentPageNum])\r\n\r\n  if (currentBook.bookSound?.regions) {\r\n    currentRegionsOfNextPage = currentBook.bookSound.regions.find(item => item.data.pageNumber === +nextPage + 1);\r\n    currentRegionsOfPrevPage = currentBook.bookSound.regions.find(item => item.data.pageNumber === +prevPage - 1);\r\n  }\r\n\r\n  // Render всех страниц, которые к нам пришли\r\n  let flipPages = props.bookPagesSort.map((item, idx) => {\r\n    // добавляем класс на первую страницу и на обложку\r\n    let bookPageClassName = '';\r\n    if(item.pageNumber > 0) {\r\n      bookPageClassName = 'flip-page';\r\n    } else {\r\n      bookPageClassName = 'page page-cover';\r\n    }\r\n    if(item.pageNumber === 1) {\r\n      bookPageClassName = 'flip-page first-page';\r\n    }\r\n    return (\r\n      // Страница с 0 индексом становится обложкой\r\n      <div key={item.pageNumber} className={bookPageClassName}>\r\n        <div className=\"flip-page-inner\">\r\n          <div className=\"flip-page-text\">\r\n            { item.blocks ? item.blocks.map((block,index) =>  {\r\n              if(block.type === 'paragraph') {\r\n                return <p key={index} dangerouslySetInnerHTML={{__html: block.data.text}}/>\r\n              } else if (block.type === 'image') {\r\n                return  <img key={index} src={`${block.data.file.url}`} alt=\"\"/>\r\n              } else {\r\n                return null\r\n              }\r\n            }) : null}\r\n          </div>\r\n          { item.pageNumber > 0\r\n            ? <div className=\"flip-page-number\">{item.pageNumber}</div>\r\n            : <div className=\"page-cover-title\">\r\n              {`${currentBook.title}`}\r\n              <div>\r\n                <span>{currentBook.author}</span>\r\n              </div>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  })\r\n  // console.log(bookState)\r\n  // В момент перелистываения страницы записываем в стейт номер текущей страницы\r\n  const onPageTurn = (e) => {\r\n\r\n    if (currentBook.bookSound?.regions && (e.object.flipController.state === 'flipping' || e.object.isUserMove)) {\r\n\r\n      currentRegionsStart = currentBook.bookSound.regions.find(item => item.data.pageNumber === +e.data);\r\n\r\n      props.setPageNumbersForOpenedBooks(+bookId, e.data, ( (currentBook.bookSound?.regions && currentBook.bookSound.regions.length > 0) && e.data > 1 ) ? currentRegionsStart.start : 0);\r\n      // props.setPageNumbersForOpenedBooks(+props.bookId, +props.nextPage + 1, (props.currentBook.bookSound?.regions && props.currentBook.bookSound.regions.length > 0) ? +props.currentRegionsOfNextPage.start : 0);\r\n    }\r\n    setCurrentPageNum(e.data)\r\n  }\r\n\r\n  // В момент переворачиная страницы добавлять и удаляем класс с родиля всей книги, по нему стрелки вперед/назад становятся неактивные\r\n  const onChangeState = (state) => {\r\n    setBookState(state)\r\n    if (state === 'flipping' && flipRef && flipRef.current) {\r\n      document.querySelector('.flip-page-parent').classList.add('isFlipping')\r\n    }\r\n    if (state !== 'flipping' && flipRef && flipRef.current) {\r\n      document.querySelector('.flip-page-parent').classList.remove('isFlipping')\r\n    }\r\n  }\r\n\r\n  // Дополнительная проверка необходимая, для того что бы реакт видел страницы\r\n  const onInit = useCallback(() => {\r\n\r\n    if (flipRef && flipRef.current) {\r\n      setTotalPages(flipRef.current.pageFlip().getPageCount() - 1);\r\n      props.setTotalPagesForCurrentBook(currentBook.id, props.bookPagesSort.length)\r\n      // props.setTotalPagesForCurrentBook(currentBook.id,(flipRef.current.pageFlip().getPageCount() - 1))\r\n      flipRef.current.pageFlip().turnToPage(+currentPageNum)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentPageNum]);\r\n\r\n  let onFlipToNext = () => {\r\n    if (flipRef && flipRef.current) {\r\n      flipRef.current.pageFlip().flipNext()\r\n    }\r\n  }\r\n\r\n  let onFlipToPrev = () => {\r\n    if (flipRef && flipRef.current) {\r\n      flipRef.current.pageFlip().flipPrev()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flip-page-container\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"flip-page-content\">\r\n          <div className=\"flip-page-header\">\r\n            <Header startPage={props.startPage} hideSearch={props.hideSearch}/>\r\n          </div>\r\n          {\r\n            isFetching\r\n              ? <Preloader />\r\n              : <div className={currentPageNum >= 3 ? `page-flip-wrapper static-bg` :`page-flip-wrapper`}>\r\n                <HTMLFlipBook\r\n                  width={420}\r\n                  minWidth={115}\r\n                  maxWidth={420}\r\n                  height={600}\r\n                  maxHeight={600}\r\n                  minHeight={300}\r\n                  ref={flipRef}\r\n                  onChangeState={(e) => onChangeState(e.data)}\r\n                  className=\"flip-page-parent\"\r\n                  onInit={onInit}\r\n                  size=\"stretch\"\r\n                  onFlip={(e) => onPageTurn(e)}\r\n                  mobileScrollSupport={true}\r\n                  showCover={true}\r\n                  renderOnlyPageLengthChange={true}\r\n                >\r\n                  {\r\n                    flipPages\r\n                  }\r\n                </HTMLFlipBook>\r\n                <FlipNav {...props} currentBook={currentBook} flipRef={flipRef} onFlipToNext={onFlipToNext}\r\n                         currentRegionsOfNextPage={currentRegionsOfNextPage}\r\n                         currentRegionsOfPrevPage={currentRegionsOfPrevPage} currentPageNum={currentPageNum}\r\n                         pageNum={currentPageNum} bookId={bookId} prevPage={prevPage} nextPage={nextPage}\r\n                         progress={progress} setProgress={setProgress} totalPages={totalPages} onFlipToPrev={onFlipToPrev}\r\n                         bookState={bookState}  />\r\n              </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FlipPageCustom;","export default __webpack_public_path__ + \"static/media/audiobook.7c87dd20.svg\";","//global dependencies\r\nimport React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {\r\n  getBookPagesAll, setBookPagesAll,\r\n  setMakeChoose, setCurrentTimeForListenedBook,\r\n  setPageNumbersForOpenedBooks, setStateOfAudio,\r\n  setTotalPagesForCurrentBook,\r\n} from \"../../redux/FairytalesListReducer\";\r\n\r\n//components\r\nimport FlipPageCustom from \"./FlipPageCustom\";\r\n\r\nconst FlipPageCustomContainer = (props) => {\r\n\r\n  let bookId = props.match.params.bookId;\r\n\r\n\r\n  let bookPagesSort = props.bookPagesAll.sort((a, b) => a.pageNumber - b.pageNumber);\r\n     useEffect(() => {\r\n       bookPagesSort.unshift({isCover:true,title:'title',pageNumber: 0});\r\n     },[bookPagesSort])\r\n\r\n  useEffect(() => {\r\n    props.getBookPagesAll(bookId)\r\n\r\n    return () => {\r\n      props.setBookPagesAll([])\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [bookId])\r\n\r\n  return (\r\n       <FlipPageCustom {...props} bookPagesSort={bookPagesSort} />\r\n  )\r\n}\r\n\r\nlet withRouterFlipPageCustomContainer = withRouter(FlipPageCustomContainer);\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    books: state.fairytalesList.books,\r\n    bookPages: state.fairytalesList.bookPages,\r\n    hideSearch: state.fairytalesList.hideSearch,\r\n    bookPagesAll: state.fairytalesList.bookPagesAll,\r\n    startPage: state.fairytalesList.startPage,\r\n    touchedBooks: state.fairytalesList.touchedBooks,\r\n    setBookPagesAll: state.fairytalesList.setBookPagesAll,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getBookPagesAll,\r\n  setPageNumbersForOpenedBooks,\r\n  setCurrentTimeForListenedBook, setBookPagesAll,\r\n  setStateOfAudio, setTotalPagesForCurrentBook,\r\n})(withRouterFlipPageCustomContainer)","import {auth} from \"../api/api\";\r\n\r\nconst IS_AUTH = 'IS_AUTH';\r\n\r\nlet initialState = {\r\n  loginPage: true,\r\n  isAuth: JSON.parse(localStorage.getItem('fairytales_auth')) ? true : null,\r\n}\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case IS_AUTH:\r\n       return {\r\n         ...state,\r\n         isAuth: action.auth,\r\n       }\r\n      default:\r\n        return state\r\n    }\r\n};\r\n\r\nexport const  setUserAuth = (auth) => ({type:IS_AUTH, auth})\r\n\r\nexport const getAuth = () => {\r\n\r\n  return (dispatch) => {\r\n    auth.checkAuth().then(response => {\r\n      if (response && response.data) {\r\n        dispatch(setUserAuth(true))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default LoginReducer;","export default __webpack_public_path__ + \"static/media/leaves.469005ec.svg\";","import classes from \"./LoginPage.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Menu from \"../../common/Menu/Menu\";\r\nimport {useState} from \"react\";\r\n\r\nimport bg from \"../../images/leaves.svg\"\r\n\r\nconst LoginPage = () => {\r\n\r\n  const [loginPage,setLoginPage] = useState(true)\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <img className={classes.bg} src={bg} alt=\"background\"/>\r\n      <div className={classes.content}>\r\n        <div className=\"wrapper\">\r\n          <header className={classes.header}>\r\n            <div className={classes.inner}>\r\n              <div className={classes.back}>\r\n                <Link to={location => ({...location, pathname: \"/\"})}/>\r\n              </div>\r\n              <div className={classes.name}>\r\n                <p>Innstillinger</p>\r\n              </div>\r\n              {/*<Menu loginPage={loginPage} />*/}\r\n            </div>\r\n          </header>\r\n          <div className={classes.main}>\r\n            <div className={classes.title}>\r\n              <h1>\r\n                Registrering\r\n              </h1>\r\n              <p>\r\n                Registrer deg og aldri miste din kjøp\r\n              </p>\r\n              <form action=\"#\" className={classes.form}>\r\n                <div className={classes.formInner}>\r\n                  <p>\r\n                    <label htmlFor=\"\" className={classes.label} >ID-en din:</label>\r\n                    <input type=\"text\" readOnly={true} value='14180357@kl' className={classes.inputReadOnly} />\r\n                  </p>\r\n                  <p>\r\n                    <label htmlFor=\"\" className={classes.label}>Din e-post:</label>\r\n                    <input type=\"text\" placeholder='E-post' className={classes.input} />\r\n                  </p>\r\n                  <p>\r\n                    <label htmlFor=\"\" className={classes.label}>Passordet ditt:</label>\r\n                    <input type=\"text\" placeholder='Passord'  className={classes.input} />\r\n                  </p>\r\n                  <div className={classes.buttons}>\r\n                    <button type=\"button\" className={classes.login}>Allerede har en konto</button>\r\n                    <button type=\"button\" className={classes.register}>Registrere</button>\r\n                    <button type=\"button\" className={classes.deleteBooks}>Slette bøker</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import React, {useEffect} from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Start from \"../../pages/StartPage/Start\";\r\nimport FlipPageCustomContainer from \"../../pages/FlipPageCustom/FlipPageCustomContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth} from \"../../redux/LoginReducer\";\r\nimport LoginPage from \"../../pages/LoginPage/LoginPage\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.login.isAuth\r\n  }\r\n}\r\n\r\nconst AppRouter = (props) => {\r\n\r\n  useEffect(() => {\r\n    if(!props.isAuth) {\r\n      props.getAuth()\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props.isAuth])\r\n\r\n  return (\r\n        props.isAuth\r\n        ? <Switch>\r\n            <Route exact path='/' render={() => <Start />} />\r\n            <Route path='/book/:bookId/' render={() => <FlipPageCustomContainer />} />\r\n          <Route path={'/login'} render={() => <LoginPage />} />\r\n            <Redirect to={'/404'} />\r\n          </Switch>\r\n        : 'Вы не авторизированы'\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, {getAuth})(AppRouter)\r\n\r\n","import './App.css';\r\n\r\nimport AppRouter from \"./components/AppRouter/AppRouter\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <div className=\"app\">\r\n        <AppRouter />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport sortingReducers from \"./sortingReducers\";\r\nimport FairytalesListReducer from \"./FairytalesListReducer\";\r\nimport SearchReducer from \"./SearchReducer\";\r\nimport LoginReducer from \"./LoginReducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n  sorting: sortingReducers,\r\n  fairytalesList: FairytalesListReducer,\r\n  searching: SearchReducer,\r\n  login: LoginReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nwindow.store = store;\r\n\r\nexport default  store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Sorting_list__1jI7Q\",\"item\":\"Sorting_item__2nJls\",\"inner\":\"Sorting_inner__2QJBw\",\"freeBookSort\":\"Sorting_freeBookSort__1fjgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parentMenu\":\"Menu_parentMenu__me1Eg\",\"menu\":\"Menu_menu__1uyT3\",\"active\":\"Menu_active__1RZpx\",\"menuList\":\"Menu_menuList__3Av_N\",\"loginMenu\":\"Menu_loginMenu__3d8bw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3bDmR\",\"box\":\"Search_box__3EGOZ\",\"searchBtn\":\"Search_searchBtn__1FNJ0\",\"searchResult\":\"Search_searchResult__2wPzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Start_container__3jyXo\",\"image\":\"Start_image__30fyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginPage_container__NW7EM\",\"content\":\"LoginPage_content__nmyoQ\",\"bg\":\"LoginPage_bg__yvguT\",\"anim\":\"LoginPage_anim__2NZFm\",\"inner\":\"LoginPage_inner__3Msn6\",\"back\":\"LoginPage_back__39ApM\",\"name\":\"LoginPage_name__1uB-J\",\"main\":\"LoginPage_main__2fehQ\",\"title\":\"LoginPage_title__1ozUp\",\"form\":\"LoginPage_form__1MpS5\",\"formInner\":\"LoginPage_formInner__2QuNf\",\"input\":\"LoginPage_input__UC5hV\",\"inputReadOnly\":\"LoginPage_inputReadOnly__2m_uO\",\"label\":\"LoginPage_label__2UHXn\",\"buttons\":\"LoginPage_buttons__bQYZF\",\"login\":\"LoginPage_login__112-g\",\"register\":\"LoginPage_register__1JCan\",\"deleteBooks\":\"LoginPage_deleteBooks__pL-UF\"};"],"sourceRoot":""}